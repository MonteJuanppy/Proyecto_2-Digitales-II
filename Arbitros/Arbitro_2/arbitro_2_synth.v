/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "arbitro_2_synth.v:6" *)
module arbitro_2_synth(Pop, clk, Push, FIFO_empty, Almost_full, \class );
  (* src = "arbitro_2_synth.v:16" *)
  wire _00_;
  (* src = "arbitro_2_synth.v:16" *)
  wire [3:0] _01_;
  wire [1:0] _02_;
  wire [1:0] _03_;
  wire [1:0] _04_;
  wire [1:0] _05_;
  wire [1:0] _06_;
  wire [1:0] _07_;
  wire _08_;
  wire [1:0] _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  (* src = "arbitro_2_synth.v:17" *)
  wire _13_;
  (* src = "arbitro_2_synth.v:17" *)
  wire _14_;
  (* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *)
  wire _15_;
  (* src = "arbitro_2_synth.v:10" *)
  input [3:0] Almost_full;
  (* src = "arbitro_2_synth.v:9" *)
  input FIFO_empty;
  (* init = 1'h0 *)
  (* src = "arbitro_2_synth.v:6" *)
  output Pop;
  reg Pop = 1'h0;
  (* init = 4'h0 *)
  (* src = "arbitro_2_synth.v:8" *)
  output [3:0] Push;
  reg [3:0] Push = 4'h0;
  (* src = "arbitro_2_synth.v:11" *)
  input [1:0] \class ;
  (* src = "arbitro_2_synth.v:7" *)
  input clk;
  assign _10_ = _09_[0] |(* src = "arbitro_2_synth.v:25|arbitro_2.v:23" *)  \class [1];
  assign _06_[0] = _03_[0] |(* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *)  _04_[0];
  assign _06_[1] = _02_[1] |(* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *)  _05_[1];
  assign _15_ = _06_[0] |(* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *)  _06_[1];
  assign _07_[0] = Almost_full[3] |(* src = "arbitro_2_synth.v:17" *)  Almost_full[2];
  assign _07_[1] = Almost_full[1] |(* src = "arbitro_2_synth.v:17" *)  Almost_full[0];
  assign _14_ = _07_[0] |(* src = "arbitro_2_synth.v:17" *)  _07_[1];
  assign _11_ = _09_[0] |(* src = "arbitro_2_synth.v:27|arbitro_2.v:23" *)  _09_[1];
  assign _12_ = \class [0] |(* src = "arbitro_2_synth.v:26|arbitro_2.v:23" *)  _09_[1];
  assign _08_ = \class [0] |(* src = "arbitro_2_synth.v:24|arbitro_2.v:23" *)  \class [1];
  assign _02_[1] = ~(* src = "arbitro_2_synth.v:25|arbitro_2.v:23" *) _10_;
  assign _05_[1] = ~(* src = "arbitro_2_synth.v:24|arbitro_2.v:23" *) _08_;
  assign _03_[0] = ~(* src = "arbitro_2_synth.v:27|arbitro_2.v:23" *) _11_;
  assign _04_[0] = ~(* src = "arbitro_2_synth.v:26|arbitro_2.v:23" *) _12_;
  assign _00_ = ~(* src = "arbitro_2_synth.v:17" *) _13_;
  assign _01_[0] = _15_ ? (* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *) _05_[1] : 1'hx;
  assign _01_[1] = _15_ ? (* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *) _02_[1] : 1'hx;
  assign _01_[2] = _15_ ? (* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *) _04_[0] : 1'hx;
  assign _01_[3] = _15_ ? (* src = "arbitro_2_synth.v:27|arbitro_2.v:23|<techmap.v>:445" *) _03_[0] : 1'hx;
  (* src = "arbitro_2_synth.v:16" *)
  always @(posedge clk)
      Pop <= _00_;
  (* src = "arbitro_2_synth.v:16" *)
  always @(posedge clk)
      Push[0] <= _01_[0];
  (* src = "arbitro_2_synth.v:16" *)
  always @(posedge clk)
      Push[1] <= _01_[1];
  (* src = "arbitro_2_synth.v:16" *)
  always @(posedge clk)
      Push[2] <= _01_[2];
  (* src = "arbitro_2_synth.v:16" *)
  always @(posedge clk)
      Push[3] <= _01_[3];
  assign _13_ = FIFO_empty |(* src = "arbitro_2_synth.v:17" *)  _14_;
  assign _09_[1] = \class [1] ^(* src = "arbitro_2_synth.v:26|arbitro_2.v:23" *)  1'h1;
  assign _09_[0] = \class [0] ^(* src = "arbitro_2_synth.v:25|arbitro_2.v:23" *)  1'h1;
  assign _02_[0] = 1'h0;
  assign _03_[1] = 1'h0;
  assign _04_[1] = 1'h0;
  assign _05_[0] = 1'h0;
endmodule
